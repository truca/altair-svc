import type { Metadata } from "next";
import { Lora } from "next/font/google";
import "./globals.css";
import AuthProvider from "./contexts/AuthProvider";
import ThemeProvider from "./contexts/ThemeProvider";
import { ApolloWrapper } from "./lib/apollo/apollo-wrapper";
import { cookies } from "next/headers";
import { ReadonlyRequestCookies } from "next/dist/server/web/spec-extension/adapters/request-cookies";
import { redirect } from "next/navigation";
import { headers } from "next/headers";
import { verifyIdToken } from "./lib/firebase/firebaseAdmin";

async function fetchUser(
  cookieStore: ReadonlyRequestCookies,
  pathname: string
) {
  const token = cookieStore.get("token")?.value;

  // if (!token) {
  //   return {
  //     redirect: {
  //       destination:
  //         pathname !== "/login" ? `/login?redirect=${pathname}` : "/login",
  //       permanent: false,
  //     },
  //   };
  // }

  try {
    if (!token) return;
    const user = await verifyIdToken(token);
    return { props: { user } };
  } catch (error) {
    // return {
    //   redirect: {
    //     destination: "/login",
    //     permanent: false,
    //   },
    // };
  }
}

const lora = Lora({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  // user: any | null; // You can define a better User type
}

export default async function RootLayout(props: RootLayoutProps) {
  const { children } = props;
  const cookieStore = cookies();
  const headersList = headers();
  const currentUrl = headersList.get("referer");
  const pathname = headersList.get("x-next-pathname") || "/";
  const { redirect: { destination } = {} } =
    (await fetchUser(cookieStore, pathname)) || {};

  if (currentUrl && destination && !currentUrl.includes(destination)) {
    redirect(destination);
  }

  return (
    <html lang="en">
      <body className={lora.className}>
        <ThemeProvider>
          <ApolloWrapper>
            <AuthProvider>{children}</AuthProvider>
          </ApolloWrapper>
        </ThemeProvider>
      </body>
    </html>
  );
}
